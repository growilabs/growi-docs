(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{563:function(e,t,r){"use strict";r.r(t);var o=r(69),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"debugging"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#debugging"}},[e._v("#")]),e._v(" Debugging")]),e._v(" "),r("p",[e._v("This documentation explains how you can debug frontend and backend code using Browser DevTools or VS Code debugger.")]),e._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#debugging-with-browser-devtools"}},[e._v("Debugging with Browser DevTools")])]),r("li",[r("a",{attrs:{href:"#debugging-with-vs-code"}},[e._v("Debugging with VS Code")])])])]),r("p"),e._v(" "),r("h2",{attrs:{id:"debugging-with-browser-devtools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#debugging-with-browser-devtools"}},[e._v("#")]),e._v(" Debugging with Browser DevTools")]),e._v(" "),r("p",[e._v("You can debug client-side code by using DevTools in your browser.")]),e._v(" "),r("h3",{attrs:{id:"chrome"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chrome"}},[e._v("#")]),e._v(" Chrome")]),e._v(" "),r("ol",[r("li",[e._v("Start development server.")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.chrome.com/docs/devtools/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chrome DevTools"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("You can debug client-side code by using the "),r("a",{attrs:{href:"https://developer.chrome.com/docs/devtools/javascript/sources/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sources panel"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("li",[e._v("If you open a TypeScript file by "),r("code",[e._v("Ctrl + P")]),e._v(", you should choose files under "),r("code",[e._v("webpack://_N_E/")]),e._v(".")])])])]),e._v(" "),r("img",{attrs:{src:e.$withBase("/assets/images/debugging-chrome-source-panel.png"),alt:"Chrome source panel"}}),e._v(" "),r("h3",{attrs:{id:"firefox"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#firefox"}},[e._v("#")]),e._v(" Firefox")]),e._v(" "),r("ol",[r("li",[e._v("Start development server.")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.mozilla.org/ja/docs/Learn/Common_questions/What_are_browser_developer_tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("Firefox DevTools"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[e._v("You can debug client-side code by using "),r("a",{attrs:{href:"https://firefox-source-docs.mozilla.org/devtools-user/debugger/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript Debugger"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("li",[e._v("If you open a TypeScript file by "),r("code",[e._v("Ctrl + P")]),e._v(", an original source file is a file of the name with a random suffix such as "),r("code",[e._v("?xxxx")]),e._v(".\n"),r("ul",[r("li",[e._v("Or you can select a file under the "),r("code",[e._v("Webpack")]),e._v(" folder from the source file tree in the left column.")])])])])])]),e._v(" "),r("img",{attrs:{src:e.$withBase("/assets/images/debugging-firefox-debugger-panel.png"),alt:"Firefox debugger panel"}}),e._v(" "),r("h2",{attrs:{id:"debugging-with-vs-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#debugging-with-vs-code"}},[e._v("#")]),e._v(" Debugging with VS Code")]),e._v(" "),r("p",[e._v("VS Code supports debugging of both client-side and server-side code.")]),e._v(" "),r("h3",{attrs:{id:"client-side-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#client-side-code"}},[e._v("#")]),e._v(" Client-side code")]),e._v(" "),r("p",[e._v("You can debug in the same way as in "),r("a",{attrs:{href:"#debugging-with-browser-devtools"}},[e._v("Debugging with Browser DevTools")]),e._v(".\nBreakpoints can be set for source code being edited on VS Code.")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Chrome")]),e._v(" "),r("ol",[r("li",[e._v("Start development server.")]),e._v(" "),r("li",[e._v("Choose ["),r("strong",[e._v("Debug: Chrome")]),e._v("] from the "),r("strong",[e._v("Run and Debug")]),e._v(" panel.")])]),e._v(" "),r("img",{attrs:{src:e.$withBase("/assets/images/debugging-vscode-chrome-debugger.png"),alt:"VSCode Chrome debugger"}})]),e._v(" "),r("li",[r("p",[e._v("Firefox")]),e._v(" "),r("ol",[r("li",[e._v("Start development server.")]),e._v(" "),r("li",[e._v("Choose ["),r("strong",[e._v("Debug: Firefox")]),e._v("] from the "),r("strong",[e._v("Run and Debug")]),e._v(" panel.")])]),e._v(" "),r("img",{attrs:{src:e.$withBase("/assets/images/debugging-vscode-firefox-debugger.png"),alt:"VSCode Firefox debugger"}})])]),e._v(" "),r("h3",{attrs:{id:"server-side-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#server-side-code"}},[e._v("#")]),e._v(" Server-side code")]),e._v(" "),r("p",[e._v("The VS Code debugger can be attached to the development server in two ways.")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Use [Debug: Attach Debugger to Server]")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("Features: Fast and flexible, attach/detach at any time during development")])])]),e._v(" "),r("li",[r("p",[e._v("Follow the steps below:\n1. Start development server first.\n- Verify that the "),r("code",[e._v("9229")]),e._v(" port forwarding is listed in the Ports panel.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v('    <img :src="$withBase(\'/assets/images/debugging-portforwarding.png\')" alt="Portforwarding">\n\n1. Choose [**Debug: Attach Debugger to Server**] from the **Run and Debug** panel.\n\n<img :src="$withBase(\'/assets/images/debugging-vscode-attach-debugger-to-server-debugger.png\')" alt="VSCode Attach Debugger to Server debugger">\n')])])])])])]),e._v(" "),r("li",[r("p",[e._v("Use [Debug: Server]")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("Feature: You can set breakpoints for the server startup process")])])]),e._v(" "),r("li",[r("p",[e._v("Follow the steps below:\n1. Select ["),r("strong",[e._v("Debug: Server")]),e._v("] from the "),r("strong",[e._v("Run and Debug")]),e._v(" panel.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v('<img :src="$withBase(\'/assets/images/debugging-vscode-server-debugger.png\')" alt="VSCode Server debugger">\n')])])])])])])]),e._v(" "),r("p",[e._v("If the debugger is attached successfully, the status bar of VS Code turns an orange color. In this state, you can debug by setting breakpoints in any server-side code.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("Handling Unbound Breakpoints")]),e._v(" "),r("p",[e._v("If you set a breakpoint but still get an Unbound breakpoint, check the following.")]),e._v(" "),r("ul",[r("li",[e._v("Verify that it is imported/required from Express code.")]),e._v(" "),r("li",[e._v("Among the files under "),r("code",[e._v("packages/app/src/pages")]),e._v(", the file with the extension "),r("code",[e._v("*.page.ts")]),e._v(" is "),r("a",{attrs:{href:"https://nextjs.org/docs/basic-features/pages",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pages Component of Next.js"),r("OutboundLink")],1),e._v(".\nSince these files have not yet been compiled immediately after the development server is started, breakpoints cannot be set. Please compile a page component by accessing the relevant page from your browser.")]),e._v(" "),r("li",[e._v("If you are experiencing instability with your breakpoints being enabled or disabled (unbound breakpoints), consider setting the "),r("code",[e._v("--nolazy")]),e._v(" option to your Node.js process.\nReference: "),r("a",{attrs:{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_breakpoint-validation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Breakpoint validation"),r("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=s.exports}}]);