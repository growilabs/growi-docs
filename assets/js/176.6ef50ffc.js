(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{624:function(e,s,t){"use strict";t.r(s);var a=t(69),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"almalinux-os"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#almalinux-os"}},[e._v("#")]),e._v(" AlmaLinux OS")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#概要"}},[e._v("概要")])]),t("li",[t("a",{attrs:{href:"#node-js-20-x-npm-のインストール"}},[e._v("node.js 20.x & npm のインストール")])]),t("li",[t("a",{attrs:{href:"#elasticsearch"}},[e._v("Elasticsearch")])]),t("li",[t("a",{attrs:{href:"#mongodb"}},[e._v("MongoDB")])]),t("li",[t("a",{attrs:{href:"#growi"}},[e._v("GROWI")])]),t("li",[t("a",{attrs:{href:"#リバースプロキシの設定"}},[e._v("リバースプロキシの設定")])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"概要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[e._v("#")]),e._v(" 概要")]),e._v(" "),t("p",[e._v("この章ではAlmaLinux OS 9 にGROWIをインストールする方法を紹介します。AlmaLinux OS 8 は現在未検証です。")]),e._v(" "),t("p",[e._v("セットアップに必要となるソフトウェアは以下の通りです。")]),e._v(" "),t("ul",[t("li",[e._v("node.js 18.x or 20.x")]),e._v(" "),t("li",[e._v("npm 6.x")]),e._v(" "),t("li",[e._v("pnpm")]),e._v(" "),t("li",[e._v("MongoDB 4.4 以上 (6.0 以上を推奨)")]),e._v(" "),t("li",[e._v("(Option) Elasticsearch 7.x or 8.x")]),e._v(" "),t("li",[e._v("(Optional) systemd")]),e._v(" "),t("li",[e._v("(Optional) Apache or nginx")])]),e._v(" "),t("p",[e._v("Optional となっているものは必須ではありません。ただし、本項ではこれら全てを利用し、全文検索できる GROWI を Apache or nginx でリバースプロキシする環境を構築し、systemd でホストと同時に起動させる方法を説明します。\n")]),e._v(" "),t("h2",{attrs:{id:"node-js-20-x-npm-のインストール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js-20-x-npm-のインストール"}},[e._v("#")]),e._v(" node.js 20.x & npm のインストール")]),e._v(" "),t("h3",{attrs:{id:"nodesource-repository-を利用する"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodesource-repository-を利用する"}},[e._v("#")]),e._v(" NodeSource repository を利用する")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://rpm.nodesource.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://rpm.nodesource.com/"),t("OutboundLink")],1),e._v("からNode.js のインストールスクリプトを取得します。作業ディレクトリはホームディレクトリです。\n")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cd ~\n$ curl -sL https://rpm.nodesource.com/setup_20.x -o nodesource_setup.sh\n")])])]),t("p",[e._v("取得したスクリプトを実行します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo bash nodesource_setup.sh\n")])])]),t("p",[e._v("これにより "),t("code",[e._v("dnf")]),e._v(" 経由で node.js が取得できるようになったので、 "),t("code",[e._v("dnf")]),e._v(" コマンドでインストールを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install -y nodejs\n")])])]),t("p",[e._v("GROWI では pnpm を用いたパッケージインストールを利用するため、ここで "),t("code",[e._v("pnpm")]),e._v(" コマンドをインストールしておきます。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=&lt;version> sudo sh -\n$ sudo pnpm setup\n")])])]),t("p",[e._v("また、GROWI では Turborepo を用いてビルドを行うため、"),t("code",[e._v("turbo")]),e._v(" コマンドをインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo pnpm add turbo --global\n")])])]),t("p",[e._v("Node.js, npm, pnpm, turbo のインストールが完了したら、インストールしたバージョンを確認しましょう。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ node -v\nv20.12.2\n$ npm -v\n10.5.0\n$ pnpm -v\n9.12.2\n$ turbo --version\n2.1.3\n")])])]),t("h2",{attrs:{id:"elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[e._v("#")]),e._v(" Elasticsearch")]),e._v(" "),t("h3",{attrs:{id:"インストール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("公式ページ"),t("OutboundLink")],1),e._v(" に従い、インストールを進めます。 ここでは Elasticsearch 8.x をインストールします。")]),e._v(" "),t("p",[e._v("まず、 Elasticsearch を実行できるように JDK17 をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install -y java-17-openjdk\n")])])]),t("p",[e._v("パッケージをインストールするために、Elasticsearch レポジトリの GPG キーを追加します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch\n")])])]),t("p",[e._v("Elasticsearch のレポジトリを追加します。以下の内容を"),t("code",[e._v("/etc/yum.repos.d/elasticsearch.repo")]),e._v(" に書き込みます。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[elasticsearch]\nname=Elasticsearch repository for 8.x packages\nbaseurl=https://artifacts.elastic.co/packages/8.x/yum\ngpgcheck=1\ngpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch\nenabled=0\nautorefresh=1\ntype=rpm-md\n")])])]),t("p",[e._v("これで、dnf 経由で Elasticsearch がインストールできるようになったため、インストールを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install -y --enablerepo=elasticsearch elasticsearch\n")])])]),t("p",[e._v("インストールが完了すると、elasticユーザーのデフォルトパスワードが表示されるので、念のためどこかにメモしておきましょう。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("--------------------------- Security autoconfiguration information ------------------------------ \nAuthentication and authorization are enabled. \nTLS for the transport and HTTP layers is enabled and configured. \nThe generated password for the elastic built-in superuser is : ～～～～～～～\n")])])]),t("p",[e._v("ここで Elasticsearch に割り当てるメモリを調整します。メモリの割り当ては個人ユースであれば 256MB で十分です。チーム規模、ページの量に応じて変更してください。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo vim /etc/elasticsearch/jvm.options\n# IMPORTANT: JVM heap size のコメントブロックの後に追記\n-Xms256m\n-Xmx256m\n")])])]),t("p",[e._v("インストールが完了したら、 パッケージのバージョンを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ dnf list --installed elasticsearch\nインストール済みパッケージ\nelasticsearch.x86_64                   8.13.3-1                   @elasticsearch\n")])])]),t("h3",{attrs:{id:"tls-の無効化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tls-の無効化"}},[e._v("#")]),e._v(" TLS の無効化")]),e._v(" "),t("p",[e._v("Elasticsearch 8.x では、デフォルトでは TLS 通信のみ受け付ける設定です。GROWI からは、HTTP で通信するため、設定を変更する必要があります。")]),e._v(" "),t("p",[t("code",[e._v("/etc/elasticsearch/elasticsearch.yml")]),e._v(" を編集し、以下の差分を参考に3箇所の設定を true から false に変更します。")]),e._v(" "),t("p",[e._v("また、"),t("code",[e._v('cluster.initial_master_nodes: ["localhost"]')]),e._v(" の行頭に "),t("code",[e._v("#")]),e._v(" を挿入し、コメントアウトします。（クラスタ構成しない場合）")]),e._v(" "),t("div",{staticClass:"language-diff extra-class"},[t("pre",{pre:!0,attrs:{class:"language-diff"}},[t("code",[t("span",{pre:!0,attrs:{class:"token coord"}},[e._v("--- old/elasticsearch.yml       2024-05-03 07:01:49.040484865 +0900")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token coord"}},[e._v("+++ new/elasticsearch.yml       2024-05-03 07:00:47.613622273 +0900")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token coord"}},[e._v("@@ -89,24 +89,24 @@")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# --------------------------------------------------------------------------------\n")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Enable security features\n")])]),t("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[t("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("xpack.security.enabled: true\n")])]),t("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("xpack.security.enabled: false\n")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("xpack.security.enrollment.enabled: true\n")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("xpack.security.http.ssl:\n")])]),t("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[t("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  enabled: true\n")])]),t("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  enabled: false\n")])]),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  keystore.path: certs/http.p12\n")])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Enable encryption and mutual authentication between cluster nodes\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("xpack.security.transport.ssl:\n")])]),t("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[t("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  enabled: true\n")])]),t("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  enabled: false\n")])]),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  verification_mode: certificate\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  keystore.path: certs/transport.p12\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("  truststore.path: certs/transport.p12\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Create a new cluster with the current node only\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Additional nodes can still join the cluster later\n")])]),t("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[t("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v('cluster.initial_master_nodes: ["localhost"]\n')])]),t("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[t("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v('#cluster.initial_master_nodes: ["localhost"]\n')])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token unchanged"}},[t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Allow HTTP API connections from anywhere\n")]),t("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),t("span",{pre:!0,attrs:{class:"token line"}},[e._v("# Connections are encrypted and require user authentication\n")])])])])]),t("h3",{attrs:{id:"growi-に必要な-elasticsearch-プラグインのインストール"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#growi-に必要な-elasticsearch-プラグインのインストール"}},[e._v("#")]),e._v(" GROWI に必要な Elasticsearch プラグインのインストール")]),e._v(" "),t("p",[e._v("以下の Elasticsearch plugin をインストールします。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Japanese (kuromoji) Analysis plugin"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ICU Analysis Plugin"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("まずは、Elasticsearch plugin をインストールするために利用するコマンドを検索します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ rpm -ql elasticsearch | grep bin | grep plugin\n/usr/share/elasticsearch/bin/elasticsearch-plugin\n")])])]),t("p",[e._v("上記で出力されたコマンドを利用して、 analysis-kuromoji plugin と analysis-icu plugin をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# analysis-kuromoji のインストール\n$ sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-kuromoji\n\n# analysis-icu plugin のインストール\n$ sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-icu\n")])])]),t("h3",{attrs:{id:"elasticsearch-の起動と自動起動設定の有効化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-の起動と自動起動設定の有効化"}},[e._v("#")]),e._v(" Elasticsearch の起動と自動起動設定の有効化")]),e._v(" "),t("p",[t("code",[e._v("systemctl")]),e._v(" コマンドを使って、Elasticsearch の自動起動設定を有効化し、起動します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now elasticsearch\n")])])]),t("p",[e._v("正常に起動しているか確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ systemctl status elasticsearch\n● elasticsearch.service - Elasticsearch\n     Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; enabled; preset: disabled)\n     Active: active (running) since Thu 2024-05-02 23:16:51 JST; 29s ago\n...\n")])])]),t("p",[e._v("また、http で通信できることを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ curl http://localhost:9200/\n{\n  "name" : "localhost.localdomain",\n  "cluster_name" : "elasticsearch",\n  "cluster_uuid" : "_na_",\n  "version" : {\n    "number" : "8.13.3",\n    "build_flavor" : "default",\n    "build_type" : "rpm",\n    "build_hash" : "617f7b76c4ebcb5a7f1e70d409a99c437c896aea",\n    "build_date" : "2024-04-29T22:05:16.051731935Z",\n    "build_snapshot" : false,\n    "lucene_version" : "9.10.0",\n    "minimum_wire_compatibility_version" : "7.17.0",\n    "minimum_index_compatibility_version" : "7.0.0"\n  },\n  "tagline" : "You Know, for Search"\n}\n')])])]),t("h2",{attrs:{id:"mongodb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[e._v("#")]),e._v(" MongoDB")]),e._v(" "),t("h3",{attrs:{id:"インストール-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-2"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://docs.mongodb.com/v6.0/tutorial/install-mongodb-on-red-hat/",target:"_blank",rel:"noopener noreferrer"}},[e._v("公式ページ"),t("OutboundLink")],1),e._v(" に従ってインストールを実施します。 バージョンは、MongoDB 6.0 です。")]),e._v(" "),t("p",[e._v("レポジトリを追加します。 "),t("code",[e._v("/etc/yum.repos.d/mongodb-org-6.0.repo")]),e._v(" を作成し、以下の内容を書き込みます。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("[mongodb-org-6.0]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/9/mongodb-org/6.0/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://pgp.mongodb.com/server-6.0.asc\n")])])]),t("p",[e._v("これで、dnf 経由で MongoDB がインストールできるようになったため、インストールを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install -y mongodb-org\n")])])]),t("p",[e._v("インストールが完了したら、 パッケージのバージョンを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ dnf list --installed "mongodb-org*"\nインストール済みパッケージ\nmongodb-org.x86_64                           6.0.15-1.el9       @mongodb-org-6.0\nmongodb-org-database.x86_64                  6.0.15-1.el9       @mongodb-org-6.0\nmongodb-org-database-tools-extra.x86_64      6.0.15-1.el9       @mongodb-org-6.0\nmongodb-org-mongos.x86_64                    6.0.15-1.el9       @mongodb-org-6.0\nmongodb-org-server.x86_64                    6.0.15-1.el9       @mongodb-org-6.0\nmongodb-org-tools.x86_64                     6.0.15-1.el9       @mongodb-org-6.0\n')])])]),t("p",[t("code",[e._v("systemctl")]),e._v(" コマンドを使って、MongoDB の自動起動設定を有効化し、起動します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now mongod\n")])])]),t("p",[e._v("正常に起動しているか確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ systemctl status mongod\n● mongod.service - MongoDB Database Server\n     Loaded: loaded (/usr/lib/systemd/system/mongod.service; enabled; preset: disabled)\n     Active: active (running) since Thu 2024-05-02 23:33:45 JST; 11s ago\n...\n")])])]),t("h2",{attrs:{id:"growi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#growi"}},[e._v("#")]),e._v(" GROWI")]),e._v(" "),t("h3",{attrs:{id:"git-lfs-の導入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-lfs-の導入"}},[e._v("#")]),e._v(" Git LFS の導入")]),e._v(" "),t("p",[e._v("GROWI では、フォントファイルなどを "),t("a",{attrs:{href:"https://git-lfs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Large File Storage (LFS)"),t("OutboundLink")],1),e._v("で管理しています。そのため、"),t("code",[e._v("git-lfs")]),e._v(" がインストールされていない状態で "),t("code",[e._v("git clone")]),e._v(" を行うと正しくビルドが行えません。")]),e._v(" "),t("p",[e._v("GROWI のソースコードの取得に先立ち、"),t("code",[e._v("git-lfs")]),e._v(" をインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install -y git-lfs\n")])])]),t("h3",{attrs:{id:"インストール-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-3"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/growilabs/growi",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/growilabs/growi"),t("OutboundLink")],1),e._v(" からソースコードを取得し、"),t("a",{attrs:{href:"https://github.com/growilabs/growi/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/growilabs/growi/releases"),t("OutboundLink")],1),e._v(" にて、最新の安定版のバージョンを確認します。")]),e._v(" "),t("p",[e._v("ここでは "),t("code",[e._v("/opt/growi")]),e._v(" 配下にインストールする手順を記載しています。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo mkdir -p /opt/\n$ cd /opt/\n$ sudo git clone https://github.com/growilabs/growi /opt/growi\n$ cd /opt/growi\n\n# タグの確認\n$ sudo git tag -l\n...\nv6.3.3\nv6.3.4\nv6.3.x-base\nv7.0.0\nv7.0.1\nv7.0.2\nv7.0.x-base\n...\n\n# RC がついていない最新版を利用\n$ sudo git checkout -b v7.0.2 refs/tags/v7.0.2\n")])])]),t("p",[e._v("ソースコードを clone した後に、"),t("code",[e._v("pnpm")]),e._v(" コマンドを利用して、 GROWI に必要なパッケージをインストールします。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cd /opt/growi\n$ sudo pnpm install\n")])])]),t("h3",{attrs:{id:"ビルド"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ビルド"}},[e._v("#")]),e._v(" ビルド")]),e._v(" "),t("p",[e._v("パッケージのインストールが完了したら、ビルドを行います。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo npm run app:build\n")])])]),t("p",[e._v("これには、しばらく時間がかかります。")]),e._v(" "),t("h3",{attrs:{id:"ファイアウォールの状態確認と一時的なポート開放"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ファイアウォールの状態確認と一時的なポート開放"}},[e._v("#")]),e._v(" ファイアウォールの状態確認と一時的なポート開放")]),e._v(" "),t("p",[e._v("GROWI の起動確認を行う前にファイアウォールが有効になっていないか確認します。（他のホストのブラウザから起動確認を行う場合）")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ systemctl status firewalld\n● firewalld.service - firewalld - dynamic firewall daemon\n     Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; preset: enabled)\n     Active: active (running) since Thu 2024-05-02 22:15:43 JST; 2h 5min ago\n")])])]),t("p",[e._v("上記のように active (running) と表示されている場合は、GROWI が使用する 3000 番ポートを一時的に開放します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo firewall-cmd --add-port=3000/tcp\nsuccess\n")])])]),t("h3",{attrs:{id:"起動確認"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#起動確認"}},[e._v("#")]),e._v(" 起動確認")]),e._v(" "),t("p",[e._v("ビルドが完了したら、起動確認を行います。")]),e._v(" "),t("p",[e._v("ここでは MongoDB と Elasticsearch が同一ホストで稼働していることを前提としています。")]),e._v(" "),t("p",[t("code",[e._v("MONGO_URI")]),e._v(" と "),t("code",[e._v("ELASTICSEARCH_URI")]),e._v(" は環境に合わせて適宜書き換えてください。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ sudo \\\nMONGO_URI=mongodb://localhost:27017/growi \\\nELASTICSEARCH_URI=http://localhost:9200/growi \\\nnpm run app:server\n\n...\n# 以下のメッセージが表示されるまでしばらく待つ\n{"name":"growi:crowi","hostname":"localhost.localdomain","pid":97032,"level":30,"msg":"[production] Express server is listening on port 3000","time":"2024-05-02T15:01:15.996Z","v":0}\n')])])]),t("p",[t("code",[e._v("http://<hostname or ip address>:3000/")]),e._v(" にアクセスし、初回セットアップ画面が表示されることを確認します。")]),e._v(" "),t("h3",{attrs:{id:"systemd-による自動起動の設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#systemd-による自動起動の設定"}},[e._v("#")]),e._v(" systemd による自動起動の設定")]),e._v(" "),t("p",[e._v("「"),t("RouterLink",{attrs:{to:"/ja/admin-guide/admin-cookbook/launch-with-systemd.html"}},[e._v("systemd による自動起動")]),e._v("」を参照してください。")],1),e._v(" "),t("h2",{attrs:{id:"リバースプロキシの設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#リバースプロキシの設定"}},[e._v("#")]),e._v(" リバースプロキシの設定")]),e._v(" "),t("p",[e._v("ここでは、起動した GROWI に対してリバースプロキシを行うための設定例を記載します。")]),e._v(" "),t("h3",{attrs:{id:"ファイアウォールでの-https-サービスの開放"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ファイアウォールでの-https-サービスの開放"}},[e._v("#")]),e._v(" ファイアウォールでの HTTPS サービスの開放")]),e._v(" "),t("p",[e._v("ファイアウォールが有効になっている場合、HTTPS サービスを開放します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo firewall-cmd --add-service=https --permanent\nsuccess\n$ sudo firewall-cmd --reload\nsuccess\n")])])]),t("h3",{attrs:{id:"selinux-の設定変更"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selinux-の設定変更"}},[e._v("#")]),e._v(" SELinux の設定変更")]),e._v(" "),t("p",[e._v("Apache や Nginx が、ネットワークまたはリモートポートへの接続を開始できるように SELinux の設定を変更します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo setsebool -P httpd_can_network_connect 1\n")])])]),t("h3",{attrs:{id:"apache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apache"}},[e._v("#")]),e._v(" Apache")]),e._v(" "),t("h4",{attrs:{id:"インストール-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-4"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install httpd\n")])])]),t("h4",{attrs:{id:"リバースプロキシの設定例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#リバースプロキシの設定例"}},[e._v("#")]),e._v(" リバースプロキシの設定例")]),e._v(" "),t("p",[e._v("ここではリバースプロキシに関する箇所を抜粋して記載しています。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("&lt;IfModule mod_ssl.c>\n  &lt;VirtualHost _default_:443>\n    ...\n    ###\n    # reverse proxy to crowi\n    # Header に Host: example.com を追加するため\n    ProxyPreserveHost On\n    # HTTPS利用時: Header に x-forwarded-proto: https を追加するため\n    RequestHeader set x-forwarded-proto 'https'\n    # Apache では static assets で 304 が返らないことがあるので ETag を無効化する\n    &lt;ifModule mod_headers.c>\n            Header unset ETag\n    &lt;/ifModule>\n    FileETag None\n\n    # socket.io の path を rewrite する\n    RewriteEngine On\n    RewriteCond %{REQUEST_URI}  ^/socket.io            [NC]\n    RewriteCond %{QUERY_STRING} transport=websocket    [NC]\n    RewriteRule /(.*) ws://localhost:3000/$1 [P,L]\n\n    ProxyPass / http://localhost:3000/\n    ProxyPassReverse / http://localhost:3000/\n    ...\n  &lt;/VirtualHost>\n&lt;/IfModule>\n")])])]),t("h4",{attrs:{id:"自動起動の設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自動起動の設定"}},[e._v("#")]),e._v(" 自動起動の設定")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now httpd\n")])])]),t("h3",{attrs:{id:"nginx-のインストールと設定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-のインストールと設定"}},[e._v("#")]),e._v(" Nginx のインストールと設定")]),e._v(" "),t("h4",{attrs:{id:"インストール-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#インストール-5"}},[e._v("#")]),e._v(" インストール")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo dnf install -y nginx\n")])])]),t("h4",{attrs:{id:"リバースプロキシの設定例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#リバースプロキシの設定例-2"}},[e._v("#")]),e._v(" リバースプロキシの設定例")]),e._v(" "),t("p",[t("code",[e._v("/etc/nginx/conf.d/growi.conf")]),e._v(" のようなファイルを作成し、設定を書き込みます。\nここでは HTTPS を利用する設定例を記載しています。 <server> など<>で囲まれている箇所は、適宜環境に合わせて設定してください。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream growi {\n    server localhost:3000;\n}\n\nmap $http_upgrade $connection_upgrade {\n    default Upgrade;\n    ''      close;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name &lt;server>;\n    ssl_certificate &lt;cert_file>;\n    ssl_certificate_key &lt;key_file>;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port $server_port;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_pass http://growi;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_read_timeout 900s;\n    }\n}\n\nserver {\n    listen 80;\n    server_name &lt;server>;\n    return 301 https://$server_name$request_uri;\n}\n")])])]),t("p",[e._v("設定ファイルに問題がないことを確認します。")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n")])])]),t("h4",{attrs:{id:"自動起動の設定-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自動起動の設定-2"}},[e._v("#")]),e._v(" 自動起動の設定")]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ sudo systemctl enable --now nginx\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);